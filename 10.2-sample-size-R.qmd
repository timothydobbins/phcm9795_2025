Many power and sample size procedures are available in the `epiR` package. We will also use one function from the `pwr` package.

```{r message=FALSE, warning=FALSE}
# If not yet installed, submit the following:
# install.packages("epiR")
# install.packages("pwr")
library(epiR)
library(pwr)
```

We will use three functions from the `epiR` package in this module:

- `epi.sscompc` to estimate the sample size to compare continuous outcomes
- `epi.sscohortc` to estimate the sample size to compare two independent proportions from a cohort or cross-sectional study
- `epi.sscc` to estimate the sample size to compare two independent proportions from a case-control study

We will use one function from the `pwr` package:

- `pwr.t.test` estimate the sample size to compare means from a paired study

## Sample size calculation for the independent samples t-test
To do the problem discussed in Worked Example 10.2, we use the `epi.sscompc` function:

```
epi.sscompc(treat, control, n, sigma, power, 
   r = 1, design = 1, sided.test = 2, nfractional = FALSE, conf.level = 0.95)
```

The first line contains parameters that we usually specify, with the second line usually left as the defaults. We must define the expected mean in the treatment and control groups, and the standard deviation of the measure. We specify one of `n` or `power` to be the measure to estimate, by specifying the unknown value as being equal to R's missing value, `NA`.

For example, to calculate the required sample size in Worked Example 10.2, we specify:

- the assumed mean in the experimental, or treatment, group: 90mmHg
- the assumed mean in the control group: 95mmHg
- the standard deviation of blood pressure: 25mmHg
- the required power, 0.9 (representing 90%)

The values on the second line of the function are defined by default, and we can leave these as default.

Putting this all together, and specifying the sample size as unknown:

```{r}
epi.sscompc(treat=90, control=95, n=NA, sigma=25, power=0.9) 
```

The results indicate that we need 526 participants in each group, or 1052 in total. Note that these numbers are slightly different from the Stata estimates (527 in each group).

We can define whether we want unequal numbers in each group by specifying `r`: the number in the treatment group divided by the number in the control group.

## Sample size calculation for the paired t-test

Calculating the sample size required for a paired t-test is a little more cumbersome. We can use the following code to specify:

- `m1`: the mean of the first paired observations
- `m2`: the mean of the second paired observations
- `s_group`: the common standard deviation
- `corr`: the assumed correlation between the paired observations (conservatively set to 0)

The code below then uses the `pwr.t.test` function within the `pwr` library to estimate the number of pairs. For example, to replicate Output 10.2:

```{r}
m1 <- 90
m2 <- 95
s_group <- 25
corr <- 0

s_paired <- sqrt(2 * s_group^2 - 2*corr*s_group^2)

d <- ((m1 - m2)/s_paired)

pwr.t.test(d=d, power=0.9, type="paired")
```

As per the Stata calculations, we require 528 pairs of observations (noting that **sample sizes are always rounded up**).

## Sample size calculation for difference between two independent proportions

To do the problem discussed in Worked Example 10.3, we use the `epi.sscohortc` function: 
```
epi.sscohortc(irexp1, irexp0, pexp = NA, n = NA, power = 0.80, 
   r = 1, N, design = 1, sided.test = 2, finite.correction = FALSE, 
   nfractional = FALSE, conf.level = 0.95)
```

We can enter:

- irexp1: the assumed risk of the outcome in the exposed group: here 0.35
- irexp0: the assumed risk of the outcome in the unexposed group: here 0.2
- n: the total sample size, to be determined
- power: the required power: here 0.8 (representing 80%)

```{r}
epi.sscohortc(irexp1=0.35, irexp0=0.2, n=NA, power=0.8) 
```

Note: It doesnâ€™t matter if you swap the proportions for the **exposed** and **unexposed** groups, i.e. the command `epi.sscohortc(irexp1=0.2, irexp0=0.35, n=NA, power=0.8) ` gives the same results.

## Sample size calculation with a relative risk

The `epiR` package does not have a function to estimate sample size and power directly for a relative risk, but we can use the `epi.sscohortc` function. To do this, we recognise that the assumed rate in the exposed group will equal the rate in the unexposed group multiplied by the relative risk.

Here we will replicate Output 10.4, where p0=0.5 and the desired relative risk to detect is 1.5. So we specify `irexp0 = 0.5` and `irexp1 = 1.5 * 0.5`:

```{r}
epi.sscohortc(irexp1=1.5*0.5, irexp0=0.5, n=NA, power=0.9)
```

Hence we require 77 participants in each group, or 154 participants in total.

## Sample size calculation with an odds ratio

We can use the `epi.sscc` function to calculate a sample size based on an odds ratio in a case-control study: 

```
epi.sscc(OR, p1 = NA, p0, n, power, r = 1, 
   phi.coef = 0, design = 1, sided.test = 2, nfractional = FALSE, 
   conf.level = 0.95, method = "unmatched", fleiss = FALSE)
```

Using information from Worked Example 10.4, we specify:

- OR: the odds ratio to be detected, here 1.5
- p0: the proportion of the outcome in the controls, here 0.5
- n: the sample size, here to be calculated
- power: the required study power, here 0.9

```{r}
epi.sscc(OR=1.5, p0=0.5, n=NA, power=0.9)
```

Now we calculate the sample size for Worked Example 10.5:

```{r}
epi.sscc(OR=2, p0=0.3, n=NA, power=0.9)
```

Here we see that we require a total of 376 participants to detect an odds ratio of 2.0 with 90% power;

```{r}
epi.sscc(OR=2, p0=0.3, n=NA, power=0.8)
```

or a total of 282 participants to detect an odds ratio of 2.0 with 80% power.

## Estimating sample sizes with unequal groups

To change the allocation ratio in any of these study type, we can specify `r`. Note that the definition of `r` differs slightly depending on the function used, so it pays to check the help-file for each function. In summary:

- for `epi.sscompc()`,  `r` is the number in the treatment group divided by the number in the control group
- for `epi.sscohortc()`, `r` is the number in the exposed group divided by the number in the unexposed group
- for `epi.sscc()`, `r` is the number in the control group divided by the number in the case group

As of writing (May, 2023), there is some inconsistency in this allocation ratio which leads to inconsistent results between Stata and R for case-control studies with unequal group sizes. We recommend using an alternative sample-size calculator (such as https://vbiostatps.app.vumc.org/ps/dichot) for case-control studies with unequal group sizes while this is being investigated.
